#!/bin/sh

# This script is responsible for reading the RCU serial number and setting the RCU hostname accordingly. Paired with avahi-daemon which enables mDNS, this provides an option for clients to communicate with the RCU just by knowing its serial number (instead of IP address).

hostname=null

# Try to grab custom hostname from .rackconfig.json
if [ -f /data/rcu-service/config/.rackconfig.json ]; then
    hostname=$(jq -r .SETTINGS[0].Hostname /data/rcu-service/config/.rackconfig.json)
fi

# If custom hostname does not exist in JSON config file, try to grab RCU Carrier Module S/N from EEPROM
if [[ $hostname = null ]]; then

    # If RCU Carrier EEPROM is accessible, verify RCU Carrier EEPROM checksum
    if [ -f /sys/devices/platform/bus@56240000/56246000.i2c/i2c-*/*-0050/eeprom ]; then

        EEPROM_CHECKSUM=0x$(hexdump -v -e '1/1 "%02x"' /sys/devices/platform/bus@56240000/56246000.i2c/i2c-*/*-0050/eeprom -s 1 -n 4)
        EEPROM_CRC32_GEN=$(python3 -c "import binascii; print(hex(binascii.crc32(b'$(hexdump -v -e '1/1 "\x%02x"' /sys/devices/platform/bus@56240000/56246000.i2c/i2c-*/*-0050/eeprom -s 5 -n 981)')))")

        # If RCU Carrier EEPROM checksum is valid, read RCU Carrier Module S/N and form hostname
        if [ $EEPROM_CHECKSUM == $EEPROM_CRC32_GEN ]; then
            hostname="ni-rmx-1010x-"$(hexdump -v -e '1/1 "%02x"' /sys/devices/platform/bus@56240000/56246000.i2c/i2c-*/*-0050/eeprom -s 412 -n 4)
        else
            hostname="ni-rmx-1010x"
        fi
    else
        hostname="ni-rmx-1010x"
    fi
fi

if [ -f /usr/bin/hostnamectl ]; then
    /usr/bin/hostnamectl set-hostname ${hostname}
else
    hostname ${hostname}
fi
